extends layout
block content
    .col-sm-6.col-sm-offset-3.col-xs-10.col-xs-offset-1
      #step1(style="display:none")
        h4 Step 1: Upload CSV file
        form#my-awesome-dropzone.dropzone(action='/input')
          .dz-message.needsclick
            | DROP csv file here<br>or<br>CLICK to choose file
      #step2(style="display:none;padding-top: 1cm;")
        h4 Step 2: Define your group
        btn.btn.btn-default.add-group add group
        btn.btn.btn-default.remove-group remove group
        #step2-target
      #step3(style="display:none;padding-top: 1cm;height:600px")
block script
  script(src='/dropzone/dropzone.js')
  script(src='//cdnjs.cloudflare.com/ajax/libs/Sortable/1.5.1/Sortable.min.js')
  script.
      //- STEP 1: INPUT CSV file
      $('#step1').fadeIn(1000);
      // "myAwesomeDropzone" is the camelized version of the HTML element's ID
      Dropzone.options.myAwesomeDropzone = {
        //- clickable: '#click-upload',
        paramName: "file", 
        maxFilesize: 2, // MB
        maxFiles: 1,
        acceptedFiles: 'text/csv,.csv',
        accept: function(file, done) {
          done();
        },
        success: function(file, res) {
          //- STEP 2: DEFINE GROUPS *******************************************************
          var target = document.getElementById('step2-target')
          function addGroup(){
            var row = document.createElement('div')
            var labelName = document.createElement('label');
            var divName =  document.createElement('div');
            var inputName = document.createElement('input');
            var labelSum = document.createElement('label');
            var divSum =  document.createElement('div');
            var inputSum = document.createElement('input');
            row.setAttribute('class', 'form-group row');
            inputName.setAttribute('type', 'text');
            inputName.setAttribute('class', 'form-control');
            inputName.setAttribute('placeholder', 'Group Name');
            inputSum.setAttribute('type', 'number');
            inputSum.setAttribute('class', 'form-control');
            inputSum.setAttribute('placeholder', 'Number of the Group');
            target.appendChild(row);
            row.appendChild(inputName);
            row.appendChild(inputSum);
          }
          
        
          
          addGroup();
          $('.add-group').on('click', function(){
            var groupCount = $('.row').length;
            if(groupCount === 1) {
              $('.add-group').attr('disabled', true);
              addGroup();
            }
            else if(groupCount === 0){
              $('.remove-group').attr('disabled', false);
              addGroup()
            };
          })
          $('.remove-group').on('click', function(){
            var groupCount = $('.row').length;
            $('.form-group').last().fadeOut(300, function(){
              $('.form-group').last().remove();
            })
            //- check and disable remove group btn
            if (groupCount === 2){
              $('.add-group').attr('disabled', false);
            }
            else if (groupCount === 0){
              $('.remove-group').attr('disabled', true);
            }
          })
          //- STEP 3: SELECT ATTRIBUTE ORDER  *********************************************
          //- insert all the attribute into html list
          var str = '<h4>Step 3: Define your attribute order</h4><ul id="sortables" class="list-group">';
          for(i=0;i<res.length;i++){
             str += '<li class="list-group-item">' + res[i] + '<button type="button" class="close" aria-label="Close"><span aria-hidden="true" class="js-remove">&times;</span></button></li>';
          }
          str += '</ul><button type="button" class="btn btn-default" id="submit">Submit and Analyze!</button>';
          document.getElementById('step3').innerHTML = str;

          //- *****************************************************************************

          //- create sortable function
          var el = document.getElementById('sortables');
          var sortable = Sortable.create(el, {
            filter: ".js-remove",
            onFilter: function (evt) {
              var item = evt.item,
              ctrl = evt.target;
              if (Sortable.utils.is(ctrl, ".js-remove")) {
                item.parentNode.removeChild(item);
              }
            }
          });
          $('#submit').on('click', function(){
            var optionTexts = [];
            var groupNames = [];
            var groupNums = [];
            $(".list-group-item").each(function() { optionTexts.push($(this).text()) });
            $("input[type='text']").each(function() { groupNames.push($(this).val()) });
            $("input[type='number']").each(function() { groupNums.push($(this).val()) });
            var result = {
              order: JSON.stringify(optionTexts),
              groupNames: JSON.stringify(groupNames),
              groupNums: JSON.stringify(groupNums)
            }
            //- console.log(optionTexts);
            $.post('/calculation', result, function(res){
              window.location.href = "/output"
            });
          })
          $('#step2').fadeIn('slow',function(){
            $('#step3').fadeIn(1000)
          })
        }
      };